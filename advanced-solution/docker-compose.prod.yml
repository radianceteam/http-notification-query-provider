version: "3.7"

services:
  caddy:
    image: caddy:2
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - debot-handler
      - front
  debot-handler:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: debot-handler
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
  http-transport:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: http-transport
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
  user-handler:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: user-handler
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    depends_on:
      - redis
  front:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: front
  redis:
    image: "redis"
    restart: unless-stopped
    volumes:
      - redis_data:/data

volumes:
  caddy_data:
  caddy_config:
  redis_data:
